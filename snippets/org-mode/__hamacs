# -*- mode: snippet -*-
# name: __hamacs
# key: __hamacs
# --
#+title:  ${1:`(->> (buffer-file-name)
                    (file-name-base)
                    (s-split-words)
                    (--map (s-capitalize it))
                    (s-join " "))`}
#+author: `user-full-name`
#+date:   `(format-time-string "%Y-%m-%d")`
#+tags: emacs

${2:A literate programming file configuring Emacs.}

#+begin_src emacs-lisp :exports none
  ;;; `(file-name-base (buffer-file-name)))`.el --- $2 -*- lexical-binding: t; -*-
  ;;
  ;; Â© `(format-time-string "%Y")` `user-full-name`
  ;;   Licensed under a Creative Commons Attribution 4.0 International License.
  ;;   See http://creativecommons.org/licenses/by/4.0/
  ;;
  ;; Author: `user-full-name` <http://gitlab.com/howardabrams>
  ;; Maintainer: `user-full-name` <`user-mail-address`>
  ;; Created: `(format-time-string "%B %e, %Y")`
  ;;
  ;; While obvious, GNU Emacs does not include this file
  ;;
  ;; *NB:* Do not edit this file. Instead, edit the original literate file at:
  ;;            `(buffer-file-name)`
  ;;       And tangle the file to recreate this one.
  ;;
  ;;; Code:
#+end_src

* Introduction

$0

* Technical Artifacts                                :noexport:

Let's provide a name so that the file can be required:

#+begin_src emacs-lisp :exports none
  (provide '`(file-name-base (buffer-file-name)))`)
  ;;; `(file-name-base (buffer-file-name)))`.el ends here
#+end_src


#+DESCRIPTION: $2

#+PROPERTY:    header-args:sh :tangle no
#+PROPERTY:    header-args:emacs-lisp  :tangle yes
#+PROPERTY:    header-args    :results none :eval no-export :comments no mkdirp yes

#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil date:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js

# Local Variables:
# eval: (add-hook 'after-save-hook #'org-babel-tangle t t)
# End: